# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4o-mini

# Backend Configuration
BACKEND_PORT=3001
FRONTEND_PORT=3000
NODE_ENV=development

# Security Testing Configuration
ENABLE_SECURITY_TESTS=true
BYPASS_SECURITY_VALIDATION=false
LOG_LEVEL=debug
SECURITY_LOG_LEVEL=verbose

# MCP Configuration
MCP_SERVER_PORT=3002
MCP_SERVER_HOST=localhost
ENABLE_MCP_TOOLS=true

# Database Configuration (if needed)
DATABASE_URL=postgresql://localhost:5432/mcp_security_risks
DATABASE_USER=postgres
DATABASE_PASSWORD=password

# Authentication (for testing purposes)
JWT_SECRET=your_jwt_secret_here
JWT_EXPIRES_IN=24h

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Monitoring and Logging
ENABLE_MONITORING=true
LOG_FILE_PATH=./logs/security-tests.log

# Feature Flags
ENABLE_PROMPT_INJECTION_TESTS=true
ENABLE_TOOL_POISONING_TESTS=true
ENABLE_PRIVILEGE_ABUSE_TESTS=true
ENABLE_TOOL_SHADOWING_TESTS=true
ENABLE_INDIRECT_INJECTION_TESTS=true
ENABLE_DATA_EXPOSURE_TESTS=true
ENABLE_CODE_INJECTION_TESTS=true
ENABLE_RUG_PULL_TESTS=true
ENABLE_DENIAL_OF_SERVICE_TESTS=true
ENABLE_AUTH_BYPASS_TESTS=true

# Sandbox Configuration
SANDBOX_MODE=true
SANDBOX_TIMEOUT_MS=30000
SANDBOX_MEMORY_LIMIT_MB=512

# WebSocket Configuration
WS_PORT=3003
WS_PATH=/ws

# CORS Configuration
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

